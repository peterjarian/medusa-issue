import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { MedusaProvider } from 'medusa-react';
import { RegionProvider } from '@/frontend/contexts';
import { env } from '@/env';
import { QueryClient } from '@tanstack/react-query';

const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
});

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const queryClient = new QueryClient({
        defaultOptions: {
            queries: {
                staleTime: 60 * 1000,
                retry: 1,
                refetchOnWindowFocus: false,
            },
        },
    });

    return (
        <html lang="en">
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                <MedusaProvider
                    baseUrl={env.NEXT_PUBLIC_MEDUSA_BACKEND_URL}
                    queryClientProviderProps={{ client: queryClient }}
                >
                    <RegionProvider>{children}</RegionProvider>
                </MedusaProvider>
            </body>
        </html>
    );
}
